$numberOfRings: 10; // Number of rings
$numberOfDots: 12; // Number of dots per ring
$radius: 40; // Radius of the first ring

.frame {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 400px;
  height: 400px;
  margin-top: -200px;
  margin-left: -200px;
  border-radius: 2px;
  box-shadow: 1px 2px 10px 0px rgba(0, 0, 0, 0.3);
  overflow: hidden;
  background: #27ae60;
  color: #fff;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.ring {
  position: absolute;
  width: #{$radius * 2}px;
  height: #{$radius * 2}px;
  top: 50%;
  left: 50%;
  margin-top: -#{$radius}px;
  margin-left: -#{$radius}px;

  .dot {
    position: absolute;
    width: 8px;
    height: 8px;
    top: #{$radius}px;
    left: #{$radius}px;

    .fill {
      width: 8px;
      height: 8px;
      background: #fff;
      border-radius: 50%;
    }
  }
}

@keyframes pulsate {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}

@for $i from 1 through $numberOfRings {
  $nullBase: $i - 1;
  $dotsPerCircle: $numberOfDots + ($i * 6);

  .ring-#{$i} {
    position: absolute;
    width: #{$radius * 2 + $nullBase * 22}px;
    height: #{$radius * 2 + $nullBase * 22}px;
    top: 50%;
    left: 50%;
    margin-top: -#{$radius + $nullBase * 11}px;
    margin-left: -#{$radius + $nullBase * 11}px;

    .dot {
      @for $j from 1 through $dotsPerCircle {
        $angle: 360 / $dotsPerCircle;
        $deg: $angle * ($j - 1);
        $distance: #{$radius + $nullBase * 11};
        position: absolute;
        top: 0;
        left: 0;
        transform: translate3d(0, -$distance, 0) rotate($deg);
        transform-origin: 0 100%;
        
        .fill {
          animation: pulsate 2s ease-in-out #{$i / 3}s alternate infinite both;
        }
      }
    }
  }
}
